version: '3.10'

services:
  mongo_ugc:
    image: mongo
    restart: always
    volumes:
      - ./mongodbdata:/data/db mongo
      - ./etc/mongo:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: ugc_movies
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.runCommand('ping').ok" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo-express_ugc:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo_ugc
      ME_CONFIG_MONGODB_PORT: 27017

  fastapi_ugc:
    build:
      context: ./fastapi_ugc
    env_file:
      - ./fastapi_ugc/.env
    volumes:
      - ./fastapi_ugc:/app
    environment:
      SENTRY_DSN: ${SENTRY_DSN}

  nginx:
    image: nginx:1.23.3
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /tmp/logs/nginx/:/var/log/nginx/
    depends_on:
      - fastapi_ugc
    ports:
      - "80:80"
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:5044
        tag: nginx

  zookeeper_clickhouse:
    image: zookeeper:3.5
    container_name: zookeeper_clickhouse
    hostname: zookeeper_clickhouse

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    volumes:
      - ./clickhouse/data/node1:/etc/clickhouse-server
      - ./clickhouse/init-db/shard1.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - zookeeper_clickhouse

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper_clickhouse

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhouse/data/node3:/etc/clickhouse-server
      - ./clickhouse/init-db/shard2.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - zookeeper_clickhouse

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper_clickhouse

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

#   reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic mviews --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  elk-logstash:
    image: logstash:7.10.1
    container_name: elk-logstash
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elk-elasticsearch:9200"
    ports:
      - "5044:5044/udp"
      - "5045:5045"
    volumes:
      - ./configs/logstash.conf:/config/logstash.conf:ro
      - /tmp/logs/nginx/:/var/log/nginx/:ro
    # Запускаем с указанием конфигурационного файла
    command: logstash -f /config/logstash.conf

  elk-elasticsearch:
    image: elasticsearch:7.17.2
    container_name: elk-elasticsearch
    environment:
      # Указываем ES запуститься в одном экземпляре
      discovery.type: single-node
    ports:
      - 9200:9200
    volumes:
      - esdata:/tmp/elasticsearch/data

  elk-kibana:
    image: kibana:7.17.2
    container_name: elk-kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elk-elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elk-elasticsearch

  filebeat:
    image: elastic/filebeat:8.4.1
    volumes:
      - /tmp/logs/nginx:/var/log/nginx:ro
      - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - fastapi_ugc
      - nginx
      - elk-logstash
      - elk-elasticsearch
      - elk-kibana
    command: filebeat -e -strict.perms=false
    links:
      - elk-logstash

volumes:
  esdata:
